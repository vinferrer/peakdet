FROM cirrusci/windowsservercore:2019
WORKDIR C:/Users/Administrator
# Specifying the user like this could, theoretically,
# fix some of the installation/menu problems 
# USER Administrator

# Some installers return an exit code after launching sucessfully,
# not after completing sucessfully.
# The `| more` idiom makes cmd wait for the command to finish.
# The `| Write-Output` idiom in powershell does the same thing in powershell.

# This shows how miniconda can be downloaded and installed
# once the normal installer works properly in a container.
# Get and install the latest miniconda3 installer.
# Run clean after install to eliminate unneeded tarballs.
RUN powershell -NoLogo -NoProfile -Command \
    choco install -y microsoft-visual-cpp-build-tools ; \
    choco install -y --no-progress python --version=3.9 ; \
    choco install -y --no-progress make ; \
    refreshenv ; \
    $env:Path += ';c:\python39'; \
    $env:Path += ';c:\python39\Scripts'; \
    $env:Path += ';c:\python39\lib\site-packages'; \
    refreshenv; \
    echo $env:path; \
    python -m pip install --upgrade pip ; \
    pip install --upgrade certifi ;

RUN powershell -Command " \
    $url = \"https://repo.continuum.io/miniconda/Miniconda3-latest-Windows-x86_64.exe\"; \
    $client = new-object System.Net.WebClient; \
    $client.DownloadFile( $url, \"miniconda3.exe\"); \
    ./miniconda3.exe /S /D=C:\Users\Administrator\miniconda3 | Write-Output; \
    del miniconda3.exe; \
    ./miniconda3/Scripts/conda clean --all -y; \
    "
# What the install command for MSVC build tools would look like with logging enabled:
# RUN msvc_build_tools.exe /full /q /l msvc_build_tools_log.txt | more

# Download and install 7zip.
# This is generally useful, though it probably
# could be made into a conda package at some point.
RUN powershell -Command " \
    $url = \"http://www.7-zip.org/a/7z1514-x64.exe\"; \
    $client = new-object System.Net.WebClient; \
    $client.DownloadFile( $url, \"7zip_15_14.exe\"); \
    ./7zip_15_14.exe /S | Write-Output; \
    del 7zip_15_14.exe; \
    "

# Download and install Dependency Walker.
# Use 7-zip to unzip the dependency walker folder.
# This is useful for debugging any issues that come up.
RUN powershell -Command " \
    $url = \"http://www.dependencywalker.com/depends22_x64.zip\"; \
    $client = new-object System.Net.WebClient; \
    $client.DownloadFile( $url, \"dependency_walker.zip\"); \
    & \"C:/Program Files/7-zip/7z.exe\" x dependency_walker.zip \"*.*\" -odependency_walker -y -r | Write-Output; \
    del dependency_walker.zip; \
    "

# Likely due to the same issue as the installer fail, the menus don't
# install properly, so we need to guard against the command stopping
# docker from finishing building the Dockerfile.
RUN powershell -Command " \
    conda install conda-build git svn anaconda-client anaconda-build; \
    conda clean --all; \
    "