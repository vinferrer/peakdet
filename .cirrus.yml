# global default
container:
  image: continuumio/miniconda3
  cpu: 1

makeenv_task:
  env:
    matrix:
      PYTHON: 3.6
      PYTHON: 3.7
      PYTHON: 3.8
      PYTHON: 3.9
  environment_cache:
    folder: conda-env
    fingerprint_script: 
      - echo $PYTHON
      - cat setup.py
    populate_script:
      - apt-get update
      - apt-get install -qq -y build-essential libgtk-3-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
      - conda create -yq --prefix  $PWD/conda-env python=$PYTHON
      - source activate $PWD/conda-env
      - conda install -y -c conda-forge wxpython=4.1
      - pip install -e '.[test,doc]'
  activate_script: source activate $PWD/conda-env

Unittest_task:
  depends_on: 
    - makeenv
  env:
    matrix:
      PYTHON: 3.6
      PYTHON: 3.7
      PYTHON: 3.8
      PYTHON: 3.9
    CODECOV_TOKEN: eb5758aa-6d0c-4981-a22a-16c663e2aaa9
  environment_cache:
    folder: conda-env
    fingerprint_script: 
      - echo $PYTHON
      - cat setup.py
    populate_script:
      - source activate $PWD/conda-env
  Running_unit_tests_script:
    - apt-get install -y make curl
    - source activate $PWD/conda-env
    - pip install pytest
    - make unittest
    - bash <(curl -s https://codecov.io/bash)

# Integration_task:
#   depends_on: 
#     - makeenv
#   env:
#     matrix:
#       PYTHON: 3.6
#       PYTHON: 3.7
#       PYTHON: 3.8
#       PYTHON: 3.9
#     CODECOV_TOKEN: eb5758aa-6d0c-4981-a22a-16c663e2aaa9
#   environment_cache:
#     folder: conda-env
#     fingerprint_script: 
#       - echo $PYTHON
#       - cat setup.py
#     populate_script:
#       - source activate $PWD/conda-env
#   Running_unit_tests_script:
#     - apt-get install -y make curl
#     - source activate $PWD/conda-env
#     - PATH=/home/test_user/.local/bin:$PATH
#     - pip install pytest
#     - make integration
#     - bash <(curl -s https://codecov.io/bash)

Style_check_task:
  depends_on:
  - makeenv
  env:
    PYTHON: 3.9
  environment_cache:
    folder: conda-env
    fingerprint_script:
      - echo $PYTHON
      - cat setup.py
    populate_script:
      - source activate $PWD/conda-env
  Lintin_script:
  - apt-get install -y make
  - source activate $PWD/conda-env
  - pip install flake8
  - make lint

Build_docs_task:
  depends_on:
  - makeenv
  env:
    PYTHON: 3.9
  environment_cache:
    folder: conda-env
    fingerprint_script:
      - echo $PYTHON
      - cat setup.py
    populate_script:
      - source activate $PWD/conda-env
  Build_documentation_script:
  - apt-get install -y make
  - source activate $PWD/conda-env
  - make -C docs html

# Integration_windows_task:
#   windows_container:
#     matrix:
#       - dockerfile: .ci/w_python_39
#       - dockerfile: .ci/w_python_38
#       - dockerfile: .ci/w_python_37
#       - dockerfile: .ci/w_python_36
#     cpu: 1
#   environment_cache:
#     folder: shared39
#     fingerprint_script: echo 362
#     reupload_on_changes: true
#     populate_script:
#       - pip install msvc-runtime flake8 pytest
#       - pip install Cython
#       - pip install -e .[test,doc]
#   Running_integration_script:
#     - choco install make -y --no-progress
#     - pip install msvc-runtime
#     - make integration

Unittest_windows_task:
  windows_container:
    matrix:
      - dockerfile: .ci/w_python_39
      - dockerfile: .ci/w_python_38
      - dockerfile: .ci/w_python_37
      - dockerfile: .ci/w_python_36
    cpu: 1
  environment_cache:
    folder: shared39
    fingerprint_script: echo 362
    reupload_on_changes: true
    populate_script:
      - pip install msvc-runtime
      - pip install  wxPython
      - pip install -e .[test,doc]
  Running_unittest_script:
    - choco install make -y --no-progress
    - make unittest

miniconda_task:
  windows_container:
    dockerfile: .ci/w_miniconda
    cpu: 1
  env:
    matrix:
      PYTHON: 3.6
      PYTHON: 3.7
      PYTHON: 3.8
      PYTHON: 3.9
  environment_cache:
    folder: shared39
    fingerprint_script: echo 362
    reupload_on_changes: true
    populate_script:
      - pip install msvc-runtime
      - conda create -yq --prefix  $PWD/conda-env python=$PYTHON
      - pip install -e .[test,doc]
  Running_unittest_script:
    - choco install make -y --no-progress
    - make unittest